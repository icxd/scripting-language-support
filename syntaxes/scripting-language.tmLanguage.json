{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "scripting-language",
	"patterns": [
		{ "include": "#comments" },
		{ "include": "#literals" },
		{ "include": "#keywords" },
		{ "include": "#types" },
		{ "include": "#constants" },
		{ "include": "#functions" },
		{ "include": "#variables" },
		{ "include": "#operators" },
		{ "include": "#punctuation" },
		{ "include": "#annotation" }
	],
	"repository": {
		"comments": {
			"patterns": [{
				"name": "comment.line.scripting-language",
				"match": "//.*$"
			}, {
				"name": "comment.block.scripting-language",
				"begin": "/\\*",
				"end": "\\*/"
			}]
		},
		"literals": {
			"patterns": [{
				"name": "constant.numeric.scripting-language",
				"match": "\\b(0x[0-9a-fA-F]+|0b[01]+|0o[0-7]+|[0-9]+(\\.[0-9]+)?([eE][+-]?[0-9]+)?)\\b"
			}, {
				"name": "constant.character.scripting-language",
				"match": "'.'"
			}, {
				"name": "string.quoted.double.scripting-language",
				"begin": "\"",
				"end": "\"",
				"patterns": [{
					"name": "constant.character.escape.scripting-language",
					"match": "\\\\."
				}]
			}, {
				"name": "string.quoted.single.scripting-language",
				"begin": "'",
				"end": "'",
				"patterns": [{
					"name": "constant.character.escape.scripting-language",
					"match": "\\\\."
				}]
			}, {
				"name": "entity.name.class.scripting-language",
				"match": "\\b([A-Z][a-zA-Z0-9_]*)\\s*"
			}]
		},
		"keywords": {
			"patterns": [{
				"name": "keyword.other.scripting-language",
				"match": "\\b(func|struct|enum|type|end|external|annotation)\\b"
			}, {
				"name": "keyword.control.scripting-language",
				"match": "\\b(return|if|else|while|break|continue)\\b"
			}, {
				"name": "keyword.operator.scripting-language",
				"match": "\\b(var|import|as|sizeof|new)\\b"
			}, {
				"name": "variable.parameter.scripting-language",
				"match": "\\b(self|super)\\b"
			}]
		},
		"types": {
			"patterns": [{
				"name": "storage.type.scripting-language",
				"match": "\\b(string|cstring|int|void|bool|char|usize)\\b"
			}, {
				"name": "storage.modifier.scripting-language",
				"match": "\\b(volatile|restrict|const|atomic)\\b"
			}]
		},
		"constants": {
			"patterns": [{
				"name": "constant.language.scripting-language",
				"match": "\\b(true|false|null)\\b"
			}]
		},
		"functions": {
			"patterns": [{
				"name": "entity.name.function.scripting-language",
				"match": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\s*\\("
			}]
		},
		"variables": {
			"patterns": [{
				"name": "variable.other.scripting-language",
				"match": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\b"
			}]
		},
		"operators": {
			"patterns": [{
				"name": "keyword.operator.scripting-language",
				"match": "\\+|\\-|\\*|\\/|\\%|\\&|\\||\\^|\\~|\\!|\\=|\\<|\\>|\\?|\\:|\\,|\\;|\\."
			}]
		},
		"punctuation": {
			"patterns": [{
				"name": "punctuation.definition.scripting-language",
				"match": "\\(|\\)|\\[|\\]|\\{|\\}|\\.|\\,|\\;"
			}]
		},
		"annotation": {
			"patterns": [{
				"name": "entity.name.annotation.scripting-language",
				"match": "@([a-zA-Z_][a-zA-Z0-9_]*)"
			}, {
				"name": "entity.name.annotation.scripting-language",
				"match": "@([a-zA-Z_][a-zA-Z0-9_]*)\\s*\\("
			}, {
				"name": "entity.name.annotation.scripting-language",
				"match": "@([a-zA-Z_][a-zA-Z0-9_]*)\\s*\\{"
			}]
		}
	},
	"scopeName": "main.sl"
}